df2 <- data.frame(activity = c("Writing", "Making the Margins Really Small", "Making a Cover Page", "Inserting huge quote boxes", "Skimming your research", "Crying Because You're Going to Fail", "Facebook"), minutes = c(30, 15, 20, 30, 60, 120, 720))
bp <- ggplot(df2, aes(x="", y=minutes, fill=activity)) + geom_bar(width = 1, stat = "identity") + ggtitle("Use of time before deadline for important essay")
bp
pie <- bp + coord_polar("y", start=0)
pie
bp + scale_fill_hue(l=40, c=35)
bp + scale_fill_hue(l=35, c=40)
bp + scale_fill_hue(l=10, c=30)
bp + scale_fill_hue(l=40, c=60)
library(RColorBrewer)
# Rlab library for certain distributions
library(Rlab)
library(ggplot2)
library(GGally)
library(ggmap)
library(RColorBrewer)
# Setting the seed
set.seed(1)
bp + scale_fill_brewer(palette="Spectral")
pie + scale_fill_brewer(palette="Spectral")
data(diamonds)
attach(diamonds)
head(diamonds)
View(diamonds)
View(diamonds)
ggpairs(newdata3, title="Correlogram")
newdata3 <- newdata2[, c("read","write","math","science","socst","meanscore")]
ggpairs(newdata3, title="Correlogram")
ggplot(diamonds, aes(x=carat, y=price)) + geom_point()
ggplot(diamonds, aes(x="carat", y="price"))+geom_point()
ggplot(diamonds, aes(y=price,x=karat))+geom_point()
ggplot(diamonds, aes(y=price,x=carat))+geom_point()
ggplot(diamonds, aes(y=price,x=carat))+geom_point()+facet_wrap(~ clarity)
ggplot(diamonds, aes(y=price,x=carat))+geom_point()+facet_wrap(~ cut)
ggplot(diamonds, aes(y=price,x=carat))+geom_point()+facet_wrap(~ clarity)
View(diamonds)
View(diamonds)
scatterplot3d(diamond[,8:10])
install.packages("scatterplot3d")
# Rlab library for certain distributions
library(Rlab)
library(ggplot2)
library(GGally)
library(ggmap)
library(RColorBrewer)
library(scatterplot3d)
# Setting the seed
set.seed(1)
scatterplot3d(diamond[,8:10])
scatterplot3d(diamonds[,8:10])
View(diamonds)
View(diamonds)
colors <- colors[as.numeric(diamonds$cut)]
colors <- colors[as.numeric(diamonds$cut)]
colors <- colors[as.numeric(diamonds[,2])]
colors <- colors[as.numeric(diamonds.cut)]
colors <- colors[as.numeric(factor(diamonds$cut))]
scatterplot3d(diamonds[,8:10], color=colors)
scatterplot3d(diamonds[,8:10])
hotelprices = read.csv("hotelprices.csv")
mu = 168
xbar = mean(hotelprices)
hotelprices = read.csv("hotelprices.csv")
mu <- 168
xbar <- mean(hotelprices)
View(hotelprices)
View(hotelprices)
hotelprices = read.csv("hotelprices.csv")
mu <- 168
xbar <- mean(hotelprices.hotelprices)
df = read.csv("hotelprices.csv")
mu <- 168
xbar <- mean(df["hotelprices"])
df = read.csv("hotelprices.csv")
mu <- 168
xbar <- mean(df[,"hotelprices"])
df = read.csv("hotelprices.csv")
mu <- 168
xbar <- mean(df[,"hotelprices"])
sd <- sd(df[,"hotelprices"])
df = read.csv("hotelprices.csv")
mu <- 168
xbar <- mean(df[,"hotelprices"])
sd <- sd(df[,"hotelprices"])
t_stat <- (xbar - mu)/(sd/sqrt(mu))
t_stat
df = read.csv("hotelprices.csv")
mu <- 168
xbar <- mean(df[,"hotelprices"])
sd <- sd(df[,"hotelprices"])
t_stat <- (xbar - mu)/(sd/sqrt(length(df[,"hotelprices"])))
t_stat
df = read.csv("hotelprices.csv")
mu <- 168
xbar <- mean(df[,"hotelprices"])
sd <- sd(df[,"hotelprices"])
t_stat <- (xbar - mu)/(sd/sqrt(length(df[,"hotelprices"])))
t_stat
p_t_stat = 2*pt(-t_stat,df=length(df[,"hotelprices"])-1)
df = read.csv("hotelprices.csv")
mu <- 168
xbar <- mean(df[,"hotelprices"])
sd <- sd(df[,"hotelprices"])
t_stat <- (xbar - mu)/(sd/sqrt(length(df[,"hotelprices"])))
t_stat
p_t_stat = 2*pt(-t_stat,df=length(df[,"hotelprices"])-1)
p_t_stat
t.test(df[,"hotelprices"], alternative=c("two.side"), mu=mu)
norm_sample=rnorm(3, mean=168, sd=24)
norm_sample=rnorm(3, mean=168, sd=24)
t.test(normsample, alternative=c("two.sided"), mu=168)
norm_sample=rnorm(12, mean=168, sd=24)
t.test(norm_sample, alternative=c("two.sided"), mu=168)
df = read.csv("hotelprices.csv")
mu <- 168
xbar <- mean(df[,"hotelprices"])
sd <- sd(df[,"hotelprices"])
t_stat <- (xbar - mu)/(sd/sqrt(length(df[,"hotelprices"])))
t_stat
p_t_stat = 2*pt(-t_stat,df=length(df[,"hotelprices"])-1)
p_t_stat
t.test(df[,"hotelprices"], alternative=c("two.sided"), mu=mu)
norm_sample=rnorm(12, mean=168, sd=24)
t.test(norm_sample, alternative=c("two.sided"), mu=168)
salarydata = read.csv("salarydata.csv")
qqnorm(salarydata$Hourly, pch=1, frame=FALSE)
qqline(salarydata$Hourly, col= "steelblue", lwd=2)
install.packages("tidyverse")
library(tidyverse)
###Here's how to import data through the command line, you'll first want to set your working directory, this tells R where to look for the file you want
# Using current directory, so do not need to switch
# setwd("/Users/f0049jv/Desktop/engm182_v2")
###now that R knows where the data lives, you'll want to load in your file by saving it to an object, here we'll use wrds, also the name of the data
wrds <- read.csv("wrds.csv")
###Here's how to import data through the command line, you'll first want to set your working directory, this tells R where to look for the file you want
# Using current directory, so do not need to switch
# setwd("/Users/f0049jv/Desktop/engm182_v2")
###now that R knows where the data lives, you'll want to load in your file by saving it to an object, here we'll use wrds, also the name of the data
wrds <- read.csv("wrds.csv")
head(wrds)
View(wrds)
summary(wrds)
library(tidyverse) #access tidyverse
unique(wrds$tic) #look at the unique companies
apple <- filter(wrds, tic == "AAPL") #select apple ticker
View(apple) #make sure it works
uber <- filter(wrds, tic == "UBER")
amazon <- filter(wrds, tic == "AMZN")
google <- filter(wrds, tic == "GOOGL")
### let's look at apple
summary(apple)
### let's look at uber
summary(uber)
### let's look at amazon
summary(amazon)
###finally google
summary(google)
ggplot(wrds, aes(x=fyear, y=revt, shape=tic, color=tic)) +
geom_point() +
geom_smooth(method=lm, se=FALSE, fullrange=TRUE)
#to run the code below uncomment the codeline
# setwd("xxxxx")        ###replace the xs with the path to your file
df <- read.csv("BACKUP.csv") ###replace the xs with the file name, and the xxx with whatever name you'd like it saved as
#to run the code below uncomment the codeline
# setwd("xxxxx")        ###replace the xs with the path to your file
df <- read.csv("BACKUPDATA.csv") ###replace the xs with the file name, and the xxx with whatever name you'd like it saved as
head(df)
summary(df)
View(df)
View(df)
library(tidyverse) #access tidyverse
unique(wrds$tic) #look at the unique companies
library(tidyverse) #access tidyverse
unique(df$tic) #look at the unique companies
##first replace DATA with the dataset you want to use, your x and y axes are the x = , and y = , put your x and y variables there, shape and color will be the same variable, leave geom_point empty, this specifies you want a scatter plot. In geom_smooth set method to lm for linear model, you can also use more complex regression lines in the future if you'd like, then set se to FALSE and fullrange to TRUE
ggplot(DATA, aes(x=fyear, y=revt, shape=tic, color=tic)) +
geom_point() +
geom_smooth(method=lm, se=FALSE, fullrange=TRUE)
##first replace DATA with the dataset you want to use, your x and y axes are the x = , and y = , put your x and y variables there, shape and color will be the same variable, leave geom_point empty, this specifies you want a scatter plot. In geom_smooth set method to lm for linear model, you can also use more complex regression lines in the future if you'd like, then set se to FALSE and fullrange to TRUE
ggplot(df, aes(x=fyear, y=revt, shape=tic, color=tic)) +
geom_point() +
geom_smooth(method=lm, se=FALSE, fullrange=TRUE)
# Library Imports
library(ggplot2)
# Importing the Data
bodytemp = read.csv("bodytemp.csv")
nola = read.csv("NOLAlistingsJune2016_subset2.csv")
ff = read.csv("GBDOE-French Fry DOE.csv")
food = read.csv("foodenjoyment.csv")
bnb = read.csv("NYCairbnb.csv")
# Setting the seed
set.seed(1)
# Library Imports
library(ggplot2)
# Importing the Data
bodytemp = read.csv("bodytemp.csv")
nola = read.csv("NOLAlistingsJune2016_subset2.csv")
ff = read.csv("GBDOE-French Fry DOE.csv")
food = read.csv("foodenjoyment.csv")
bnb = read.csv("NYCairbnb.csv")
# Setting the seed
set.seed(1)
View(bodytemp)
View(bodytemp)
qqnorm(bodytemp$temp, pch=1, frame=FALSE)
qqline(bodytemp$temp, col= "steelblue", lwd=2)
hist(bodytemp$temp,100)
hist(bodytemp$temp,50)
hist(bodytemp$temp,20)
hist(bodytemp$temp,25)
shapiro.test(bodytemp$temp)
shapiro.test(bodytemp$temp)
t.test(x=bodytemp$temp,mu=98.6)
t.test(bodytemp$sex ~ group, data=bodytemp$temp, paired=true)
t.test(bodytemp$sex ~ group, x=bodytemp$temp, paired=true)
t.test(temp ~ sex, data = bodytemp, paired=true)
t.test(temp ~ sex, data = bodytemp, paired=true)
t.test(temp ~ sex, data = bodytemp, paired=true)
t.test(temp ~ sex, data = bodytemp, paired=true)
t.test(temp ~ sex, data = bodytemp, paired=true)
t.test(temp ~ sex, data = bodytemp, paired=TRUE)
# Library Imports
library(ggplot2)
library(bestNormalize)
# Importing the Data
bodytemp = read.csv("bodytemp.csv")
nola = read.csv("NOLAlistingsJune2016_subset2.csv")
ff = read.csv("GBDOE-French Fry DOE.csv")
food = read.csv("foodenjoyment.csv")
bnb = read.csv("NYCairbnb.csv")
# Setting the seed
set.seed(1)
bnb$price_norm <- boxcox(bnb$price)
summary(bnb$price)
# bnb$price_norm <- boxcox(bnb$price)
bnb$price_norm <- boxcox(bnb$price)
bnb$price_norm <- bestNormalize(bnb$price)
View(bnb)
View(bnb)
bestNormalize(bnb$price)
priceBN <- bestNormalize(bnb$price)
View(priceBN)
View(priceBN)
priceBN <- bestNormalize(bnb$price)
bnb$priceBN <- priceBN$x.t
priceBN <- bestNormalize(bnb$price)
hist(priceBN$x.t,100)
hist(priceBN$x.t,50)
qqnorm(priceBN$x.t, pch=1, frame=FALSE)
qqline(priceBN$x.t, col= "steelblue", lwd=2)
bnb$priceBN <- priceBN$x.t
lm(price ~ neighbourhood+room_type+availability_365,data=bnb)
bnb$priceBN <- priceBN$x.t
bnb_reg = lm(price ~ neighbourhood+room_type+availability_365,data=bnb)
summary(bnb_reg)
shapiro.test(resid(bnb_reg))
bnb$price.t <- priceBN$x.t
bnb$neighbourhood.f <- factor(bnb$neighbourhood)
bnb_reg = lm(price.t ~ bnb$neighbourhood.f+room_type+availability_365,data=bnb)
summary(bnb_reg)
bnb$priceBN <- priceBN$x.t
bnb_reg = lm(priceBN ~ factor(bnb$neighbourhood)+room_type+availability_365,data=bnb)
summary(bnb_reg)
bnb$priceBN <- priceBN$x.t
bnb_reg = lm(priceBN ~ C(bnb$neighbourhood)+room_type+availability_365,data=bnb)
summary(bnb_reg)
bnb$priceBN <- priceBN$x.t
bnb_reg = lm(priceBN ~ factor(bnb$neighbourhood)+room_type+availability_365,data=bnb)
summary(bnb_reg)
bnb$priceBN <- priceBN$x.t
bnb_reg = lm(priceBN ~ neighbourhood+room_type+availability_365,data=bnb)
summary(bnb_reg)
shapiro.test(resid(bnb_reg))
shapiro.test(resid(bnb_reg)[0:5000])
bnb$priceBN <- priceBN$x.t
bnb_reg = lm(priceBN ~ room_type+availability_365+neighbourhood,data=bnb)
summary(bnb_reg)
View(nola)
View(nola)
# Library Imports
library(ggplot2)
library(bestNormalize)
# Importing the Data
bodytemp = read.csv("bodytemp.csv")
nola = read.csv("NOLAlistingsJune2016_subset2.csv")
ff = read.csv("GBDOE-French Fry DOE.csv")
food = read.csv("foodenjoyment.csv")
bnb = read.csv("NYCairbnb.csv")
# Setting the seed
set.seed(1)
qqnorm(bodytemp$temp, pch=1, frame=FALSE)
qqline(bodytemp$temp, col= "steelblue", lwd=2)
hist(bodytemp$temp,25)
shapiro.test(bodytemp$temp)
t.test(x=bodytemp$temp,mu=98.6)
t.test(temp ~ sex, data = bodytemp, paired=TRUE)
fit <- lm(temp ~ sex + bpm, data = bodytemp)
fit
res = resid(fit)
summary(fit)
qqnorm(res, pch=1, frame=FALSE)
qqline(res, col= "steelblue", lwd=2)
hist(res,50)
shapiro.test(res)
hist(nola$price,100)
qqnorm(nola$price, pch=1, frame=FALSE)
qqline(nola$price, col= "steelblue", lwd=2)
nolaBN <- bestNormalize(nola$price)
hist(nolaBN$x.t,50)
qqnorm(nolaBN$x.t, pch=1, frame=FALSE)
qqline(nolaBN$x.t, col= "steelblue", lwd=2)
bnb$priceBN <- nolaBN$x.t
# Library Imports
library(ggplot2)
library(bestNormalize)
# Importing the Data
bodytemp = read.csv("bodytemp.csv")
nola = read.csv("NOLAlistingsJune2016_subset2.csv")
ff = read.csv("GBDOE-French Fry DOE.csv")
food = read.csv("foodenjoyment.csv")
bnb = read.csv("NYCairbnb.csv")
# Setting the seed
set.seed(1)
qqnorm(bodytemp$temp, pch=1, frame=FALSE)
qqline(bodytemp$temp, col= "steelblue", lwd=2)
hist(bodytemp$temp,25)
shapiro.test(bodytemp$temp)
t.test(x=bodytemp$temp,mu=98.6)
t.test(temp ~ sex, data = bodytemp, paired=TRUE)
fit <- lm(temp ~ sex + bpm, data = bodytemp)
fit
res = resid(fit)
summary(fit)
qqnorm(res, pch=1, frame=FALSE)
qqline(res, col= "steelblue", lwd=2)
hist(res,50)
shapiro.test(res)
hist(nola$price,100)
qqnorm(nola$price, pch=1, frame=FALSE)
qqline(nola$price, col= "steelblue", lwd=2)
nolaBN <- bestNormalize(nola$price)
hist(nolaBN$x.t,50)
qqnorm(nolaBN$x.t, pch=1, frame=FALSE)
qqline(nolaBN$x.t, col= "steelblue", lwd=2)
nola$priceBN <- nolaBN$x.t
bnb_reg = lm(nolaBN ~ room_type+availability_365+neighbourhood,data=nola)
# Library Imports
library(ggplot2)
library(bestNormalize)
# Importing the Data
bodytemp = read.csv("bodytemp.csv")
nola = read.csv("NOLAlistingsJune2016_subset2.csv")
ff = read.csv("GBDOE-French Fry DOE.csv")
food = read.csv("foodenjoyment.csv")
bnb = read.csv("NYCairbnb.csv")
# Setting the seed
set.seed(1)
qqnorm(bodytemp$temp, pch=1, frame=FALSE)
qqline(bodytemp$temp, col= "steelblue", lwd=2)
hist(bodytemp$temp,25)
shapiro.test(bodytemp$temp)
t.test(x=bodytemp$temp,mu=98.6)
t.test(temp ~ sex, data = bodytemp, paired=TRUE)
fit <- lm(temp ~ sex + bpm, data = bodytemp)
fit
res = resid(fit)
summary(fit)
qqnorm(res, pch=1, frame=FALSE)
qqline(res, col= "steelblue", lwd=2)
hist(res,50)
shapiro.test(res)
hist(nola$price,100)
qqnorm(nola$price, pch=1, frame=FALSE)
qqline(nola$price, col= "steelblue", lwd=2)
nolaBN <- bestNormalize(nola$price)
hist(nolaBN$x.t,50)
qqnorm(nolaBN$x.t, pch=1, frame=FALSE)
qqline(nolaBN$x.t, col= "steelblue", lwd=2)
nola$priceBN <- nolaBN$x.t
bnb_reg = lm(priceBN ~ room_type+availability_365+neighbourhood,data=nola)
summary(nola_reg)
# Library Imports
library(ggplot2)
library(bestNormalize)
# Importing the Data
bodytemp = read.csv("bodytemp.csv")
nola = read.csv("NOLAlistingsJune2016_subset2.csv")
ff = read.csv("GBDOE-French Fry DOE.csv")
food = read.csv("foodenjoyment.csv")
bnb = read.csv("NYCairbnb.csv")
# Setting the seed
set.seed(1)
qqnorm(bodytemp$temp, pch=1, frame=FALSE)
qqline(bodytemp$temp, col= "steelblue", lwd=2)
hist(bodytemp$temp,25)
shapiro.test(bodytemp$temp)
t.test(x=bodytemp$temp,mu=98.6)
t.test(temp ~ sex, data = bodytemp, paired=TRUE)
fit <- lm(temp ~ sex + bpm, data = bodytemp)
fit
res = resid(fit)
summary(fit)
qqnorm(res, pch=1, frame=FALSE)
qqline(res, col= "steelblue", lwd=2)
hist(res,50)
shapiro.test(res)
hist(nola$price,100)
qqnorm(nola$price, pch=1, frame=FALSE)
qqline(nola$price, col= "steelblue", lwd=2)
nolaBN <- bestNormalize(nola$price)
hist(nolaBN$x.t,50)
qqnorm(nolaBN$x.t, pch=1, frame=FALSE)
qqline(nolaBN$x.t, col= "steelblue", lwd=2)
nola$priceBN <- nolaBN$x.t
nola_reg = lm(priceBN ~ room_type+availability_365+neighbourhood,data=nola)
summary(nola_reg)
shapiro.test(resid(nola_reg))
hist(bnb$price,100)
qqnorm(bnb$price, pch=1, frame=FALSE)
qqline(bnb$price, col= "steelblue", lwd=2)
priceBN <- bestNormalize(bnb$price)
hist(priceBN$x.t,50)
qqnorm(priceBN$x.t, pch=1, frame=FALSE)
qqline(priceBN$x.t, col= "steelblue", lwd=2)
bnb$priceBN <- priceBN$x.t
bnb_reg = lm(priceBN ~ room_type+availability_365+neighbourhood,data=bnb)
summary(bnb_reg)
shapiro.test(resid(bnb_reg)[0:5000])
nola$priceBN <- nolaBN$x.t
nola_reg = lm(priceBN ~ room_type+availability_365+neighbourhood,data=nola)
summary(nola_reg)
View(food)
View(food)
View(ff)
View(ff)
ff_reg = lm(Potato.Type ~ Cooking.Oil.Type + Cooking.Temp + Cooking.Time + Taste.Rating, data=ff)
summary(ff_reg)
ff_reg = lm(Potato.Type ~ Cooking.Oil.Type + Cooking.Temp + Cooking.Time + Taste.Rating, data=ff)
summary(ff_reg)
ff_reg = lm( Taste.Rating ~ Potato.Type + Cooking.Oil.Type + Cooking.Temp + Cooking.Time, data=ff)
summary(ff_reg)
plot(ff_reg)
View(food)
View(food)
food_reg = lm(Enjoyment ~ Food + Condiment, data=food)
summary(food)
food_reg = lm(Enjoyment ~ Food + Condiment, data=food)
summary(food_reg)
plot(food)
plot(food_reg)
# Library Imports
library(ggplot2)
library(bestNormalize)
# Importing the Data
bodytemp = read.csv("bodytemp.csv")
nola = read.csv("NOLAlistingsJune2016_subset2.csv")
ff = read.csv("GBDOE-French Fry DOE.csv")
food = read.csv("foodenjoyment.csv")
bnb = read.csv("NYCairbnb.csv")
# Setting the seed
set.seed(1)
qqnorm(bodytemp$temp, pch=1, frame=FALSE)
qqline(bodytemp$temp, col= "steelblue", lwd=2)
hist(bodytemp$temp,25)
shapiro.test(bodytemp$temp)
t.test(x=bodytemp$temp,mu=98.6)
t.test(temp ~ sex, data = bodytemp, paired=TRUE)
fit <- lm(temp ~ sex + bpm, data = bodytemp)
fit
res = resid(fit)
summary(fit)
qqnorm(res, pch=1, frame=FALSE)
qqline(res, col= "steelblue", lwd=2)
hist(res,50)
shapiro.test(res)
hist(nola$price,100)
qqnorm(nola$price, pch=1, frame=FALSE)
qqline(nola$price, col= "steelblue", lwd=2)
nolaBN <- bestNormalize(nola$price)
hist(nolaBN$x.t,50)
qqnorm(nolaBN$x.t, pch=1, frame=FALSE)
qqline(nolaBN$x.t, col= "steelblue", lwd=2)
nola$priceBN <- nolaBN$x.t
nola_reg = lm(priceBN ~ room_type+availability_365+neighbourhood,data=nola)
summary(nola_reg)
shapiro.test(resid(nola_reg))
ff_reg = lm(Taste.Rating ~ Potato.Type + Cooking.Oil.Type + Cooking.Temp + Cooking.Time, data=ff)
summary(ff_reg)
plot(ff_reg)
food_reg = lm(Enjoyment ~ Food + Condiment, data=food)
summary(food_reg)
plot(food_reg)
hist(bnb$price,100)
qqnorm(bnb$price, pch=1, frame=FALSE)
qqline(bnb$price, col= "steelblue", lwd=2)
priceBN <- bestNormalize(bnb$price)
hist(priceBN$x.t,50)
qqnorm(priceBN$x.t, pch=1, frame=FALSE)
qqline(priceBN$x.t, col= "steelblue", lwd=2)
bnb$priceBN <- priceBN$x.t
bnb_reg = lm(priceBN ~ room_type+availability_365+neighbourhood,data=bnb)
summary(bnb_reg)
shapiro.test(resid(bnb_reg)[0:5000])
# Loading packages
library(tidyverse)
# Setting working directory to the current directory
# Source: https://stackoverflow.com/questions/13672720/r-command-for-setting-working-directory-to-source-file-location-in-rstudio
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
# Reading data
df <- read_csv("../Data/Crimes_2006-2017/NYPD_Complaint_Data_Historic.csv")
View(df)
View(df)
